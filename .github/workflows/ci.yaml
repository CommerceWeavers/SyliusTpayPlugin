name: Continuous Integration

on:
    workflow_dispatch: ~
    workflow_call:
        inputs:
            type:
                description: Type of the build
                required: true
                type: string

env:
    APP_ENV: test
    TPAY_CLIENT_ID: ${{ secrets.TPAY_CLIENT_ID }}
    TPAY_CLIENT_SECRET: ${{ secrets.TPAY_CLIENT_SECRET }}
    TPAY_CARDS_API: ${{ secrets.TPAY_CARDS_API }}
    PAYUM_CYPHER_KEY: ${{ secrets.PAYUM_CYPHER_KEY }}

jobs:
    get-matrix:
        name: Get matrix
        runs-on: ubuntu-latest
        outputs:
            matrix: ${{ steps.matrix.outputs.prop }}
        steps:
            -   uses: actions/checkout@v4

            -   name: Get matrix
                id: matrix
                uses: notiz-dev/github-action-json-property@release
                with:
                    path: .github/workflows/_matrix.json
                    prop_path: ${{ inputs.type }}.ci
    
    build:
        name: Build - PHP ${{ matrix.php || '' }}
        needs: get-matrix
        runs-on: ubuntu-latest
        strategy:
            fail-fast: true
            matrix: ${{ fromJson(needs.get-matrix.outputs.matrix) }}
        steps:
            -   uses: actions/checkout@v4

            -   uses: ./.github/actions/build
                with:
                    php: ${{ matrix.php }}
                    mysql: ${{ matrix.mysql }}
                    sylius: ${{ matrix.sylius }}
                    symfony: ${{ matrix.symfony }}
                    check_service_definitions: yes
    
    static-analysis:
        name: Static analysis - PHP ${{ matrix.php || '' }}
        needs: [ get-matrix, build ]
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix: ${{ fromJson(needs.get-matrix.outputs.matrix) }}
        steps:
            -   uses: actions/checkout@v4

            -   uses: ./.github/actions/composer-cache
                with:
                    php: ${{ matrix.php }}
                    sylius: ${{ matrix.sylius }}
                    symfony: ${{ matrix.symfony }}

            -   name: PHPStan
                run: vendor/bin/phpstan

            -   name: ECS
                run: vendor/bin/ecs check
    
    unit-tests:
        name: Unit tests - PHP ${{ matrix.php || '' }}
        needs: [ get-matrix, build ]
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix: ${{ fromJson(needs.get-matrix.outputs.matrix) }}
        steps:
            -   uses: actions/checkout@v4

            -   uses: ./.github/actions/composer-cache
                with:
                    php: ${{ matrix.php }}
                    sylius: ${{ matrix.sylius }}
                    symfony: ${{ matrix.symfony }}

            -   run: vendor/bin/phpunit --testsuite unit --exclude-group requires-fixes

            -   uses: ./.github/actions/upload-logs
                if: always()
                with:
                    subject: Unit tests - PHP ${{ matrix.php || '' }}
    
    e2e-tests:
        name: E2E tests - PHP ${{ matrix.php || '' }}
        needs: [ get-matrix, build ]
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix: ${{ fromJson(needs.get-matrix.outputs.matrix) }}
        env:
            DATABASE_URL: "mysql://root:root@127.0.0.1:3306/sylius?serverVersion=${{ matrix.mysql }}"
            STATE_MACHINE_DEFAULT_ADAPTER: ${{ matrix.state_machine }}
        steps:
            -   uses: actions/checkout@v4

            -   name: Run Mockoon
                uses: mockoon/cli-action@v2
                with:
                    version: latest
                    data-file: ./tests/mockoon_tpay.json
                    port: 4000

            -   uses: ./.github/actions/build
                with:
                    php: ${{ matrix.php }}
                    mysql: ${{ matrix.mysql }}
                    sylius: ${{ matrix.sylius }}
                    symfony: ${{ matrix.symfony }}
                    e2e: yes
                    e2e_js: yes

            -   name: Install browser drivers
                run: vendor/bin/bdi detect drivers

            -   name: Run tests (E2E)
                run: |
                    find tests/E2E/ -type f -name '*Test.php' -print0 |
                    while IFS= read -r -d '' file; do
                      vendor/bin/phpunit --exclude-group requires-fixes "$file" || \
                      vendor/bin/phpunit --exclude-group requires-fixes "$file"
                    done

            -   uses: ./.github/actions/upload-logs
                if: always()
                with:
                    subject: E2E tests - PHP ${{ matrix.php || '' }}
    
    api-tests:
        name: API tests - PHP ${{ matrix.php || '' }}
        needs: [ get-matrix, build ]
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix: ${{ fromJson(needs.get-matrix.outputs.matrix) }}
        env:
            DATABASE_URL: "mysql://root:root@127.0.0.1:3306/sylius?serverVersion=${{ matrix.mysql }}"
            STATE_MACHINE_DEFAULT_ADAPTER: ${{ matrix.state_machine }}
        steps:
            -   uses: actions/checkout@v4

            -   name: Run Mockoon
                uses: mockoon/cli-action@v2
                with:
                    version: latest
                    data-file: ./tests/mockoon_tpay.json
                    port: 4000

            -   uses: ./.github/actions/build
                with:
                    php: ${{ matrix.php }}
                    mysql: ${{ matrix.mysql }}
                    sylius: ${{ matrix.sylius }}
                    symfony: ${{ matrix.symfony }}

            -   run: vendor/bin/phpunit --testsuite api

            -   uses: ./.github/actions/upload-logs
                if: always()
                with:
                    subject: API tests - PHP ${{ matrix.php || '' }}

    contract-tests:
        name: Contract tests - PHP ${{ matrix.php || '' }}
        needs: [ get-matrix, build ]
        if: "${{ inputs.type == 'daily' }}"
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix: ${{ fromJson(needs.get-matrix.outputs.matrix) }}
        steps:
            -   uses: actions/checkout@v4

            -   uses: ./.github/actions/composer-cache
                with:
                    php: ${{ matrix.php }}
                    sylius: ${{ matrix.sylius }}
                    symfony: ${{ matrix.symfony }}

            -   run: vendor/bin/phpunit --testsuite contract_external

            -   uses: ./.github/actions/upload-logs
                if: always()
                with:
                    subject: Contract tests - PHP ${{ matrix.php || '' }}
